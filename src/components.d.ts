/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface KaiListAnimator {
    'animName': string;
    'items': any[];
    'key': string;
    'noFirstRenderAnimation'?: boolean;
    'renderItemFunc': (any) => JSX.Element;
    'staggering'?: number;
  }
  interface KaiListAnimatorAttributes extends StencilHTMLAttributes {
    'animName': string;
    'items': any[];
    'key': string;
    'noFirstRenderAnimation'?: boolean;
    'renderItemFunc': (any) => JSX.Element;
    'staggering'?: number;
  }

  interface TestList {}
  interface TestListAttributes extends StencilHTMLAttributes {}
}

declare global {
  interface StencilElementInterfaces {
    'KaiListAnimator': Components.KaiListAnimator;
    'TestList': Components.TestList;
  }

  interface StencilIntrinsicElements {
    'kai-list-animator': Components.KaiListAnimatorAttributes;
    'test-list': Components.TestListAttributes;
  }


  interface HTMLKaiListAnimatorElement extends Components.KaiListAnimator, HTMLStencilElement {}
  var HTMLKaiListAnimatorElement: {
    prototype: HTMLKaiListAnimatorElement;
    new (): HTMLKaiListAnimatorElement;
  };

  interface HTMLTestListElement extends Components.TestList, HTMLStencilElement {}
  var HTMLTestListElement: {
    prototype: HTMLTestListElement;
    new (): HTMLTestListElement;
  };

  interface HTMLElementTagNameMap {
    'kai-list-animator': HTMLKaiListAnimatorElement
    'test-list': HTMLTestListElement
  }

  interface ElementTagNameMap {
    'kai-list-animator': HTMLKaiListAnimatorElement;
    'test-list': HTMLTestListElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
