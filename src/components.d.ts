/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import { JSX } from '@stencil/core';


export namespace Components {
  interface KaiAccordion {
    'ariaHidden': boolean;
  }
  interface KaiCarousel {
    'autoplay': boolean;
    'carouselTitle': string;
    'cycle': boolean;
    'delay': number;
    'transition': number;
  }
  interface KaiImg {
    /**
    * same as [&lt;img&gt;](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img) tag attribute (optional only when used as pure decorational image, otherwise you should always have one)
    */
    'alt': string;
    /**
    * same as [&lt;img&gt;](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img) tag attribute
    */
    'decoding': 'sync'|'async'|'auto';
    /**
    * same as [&lt;img&gt;](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img) tag attribute
    */
    'height': string;
    /**
    * same as [&lt;img&gt;](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img) tag attribute
    */
    'sizes': string;
    /**
    * same as [&lt;img&gt;](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img) tag attribute (required)
    */
    'src': string;
    /**
    * same as [&lt;img&gt;](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img) tag attribute
    */
    'srcset': string;
    /**
    * flag for toggling on/off the visble async loading behavior when off the default behavior is async loading after page is fully loaded
    */
    'visibleAsyncLoading': boolean;
    /**
    * same as [&lt;img&gt;](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img) tag attribute
    */
    'width': string;
  }
  interface KaiListAnimator {
    'animName': string;
    'items': any[];
    'key': string;
    'noFirstRenderAnimation'?: boolean;
    'renderItemFunc': (any) => JSX.Element;
    'staggering'?: number;
  }
  interface TestList {}
}

declare namespace LocalJSX {
  interface KaiAccordion extends JSXBase.HTMLAttributes {
    'ariaHidden'?: boolean;
  }
  interface KaiCarousel extends JSXBase.HTMLAttributes {
    'autoplay'?: boolean;
    'carouselTitle': string;
    'cycle'?: boolean;
    'delay'?: number;
    'transition'?: number;
  }
  interface KaiImg extends JSXBase.HTMLAttributes {
    /**
    * same as [&lt;img&gt;](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img) tag attribute (optional only when used as pure decorational image, otherwise you should always have one)
    */
    'alt'?: string;
    /**
    * same as [&lt;img&gt;](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img) tag attribute
    */
    'decoding'?: 'sync'|'async'|'auto';
    /**
    * same as [&lt;img&gt;](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img) tag attribute
    */
    'height'?: string;
    /**
    * same as [&lt;img&gt;](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img) tag attribute
    */
    'sizes'?: string;
    /**
    * same as [&lt;img&gt;](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img) tag attribute (required)
    */
    'src': string;
    /**
    * same as [&lt;img&gt;](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img) tag attribute
    */
    'srcset'?: string;
    /**
    * flag for toggling on/off the visble async loading behavior when off the default behavior is async loading after page is fully loaded
    */
    'visibleAsyncLoading'?: boolean;
    /**
    * same as [&lt;img&gt;](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img) tag attribute
    */
    'width'?: string;
  }
  interface KaiListAnimator extends JSXBase.HTMLAttributes {
    'animName': string;
    'items': any[];
    'key': string;
    'noFirstRenderAnimation'?: boolean;
    'renderItemFunc': (any) => JSX.Element;
    'staggering'?: number;
  }
  interface TestList extends JSXBase.HTMLAttributes {}

  interface IntrinsicElements {
    'kai-accordion': KaiAccordion;
    'kai-carousel': KaiCarousel;
    'kai-img': KaiImg;
    'kai-list-animator': KaiListAnimator;
    'test-list': TestList;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


declare global {



  interface HTMLKaiAccordionElement extends Components.KaiAccordion, HTMLStencilElement {}
  var HTMLKaiAccordionElement: {
    prototype: HTMLKaiAccordionElement;
    new (): HTMLKaiAccordionElement;
  };

  interface HTMLKaiCarouselElement extends Components.KaiCarousel, HTMLStencilElement {}
  var HTMLKaiCarouselElement: {
    prototype: HTMLKaiCarouselElement;
    new (): HTMLKaiCarouselElement;
  };

  interface HTMLKaiImgElement extends Components.KaiImg, HTMLStencilElement {}
  var HTMLKaiImgElement: {
    prototype: HTMLKaiImgElement;
    new (): HTMLKaiImgElement;
  };

  interface HTMLKaiListAnimatorElement extends Components.KaiListAnimator, HTMLStencilElement {}
  var HTMLKaiListAnimatorElement: {
    prototype: HTMLKaiListAnimatorElement;
    new (): HTMLKaiListAnimatorElement;
  };

  interface HTMLTestListElement extends Components.TestList, HTMLStencilElement {}
  var HTMLTestListElement: {
    prototype: HTMLTestListElement;
    new (): HTMLTestListElement;
  };

  interface HTMLElementTagNameMap {
    'kai-accordion': HTMLKaiAccordionElement;
    'kai-carousel': HTMLKaiCarouselElement;
    'kai-img': HTMLKaiImgElement;
    'kai-list-animator': HTMLKaiListAnimatorElement;
    'test-list': HTMLTestListElement;
  }

  interface ElementTagNameMap extends HTMLElementTagNameMap {}
}

